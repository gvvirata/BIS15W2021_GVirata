dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Grouping Type", choices = c("Campus", "Ethnicity", "Category"),
selected = "Campus"),
hr(),
helpText("Admissions data collected for the years 2010-2019 for each UC campus. More Information can be found on the University of California Information Center website: https://www.universityofcalifornia.edu/infocenter")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "AcademicYear", y="FilteredCountFR", fill=input$x))+
geom_col()+
scale_fill_futurama(palette = "planetexpress") +
theme_minimal(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admissions From 2010-2019",x="Academic Year",y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Grouping Type", choices = c("Campus", "Ethnicity", "Category"),
selected = "Campus"),
hr(),
helpText("Admissions data collected for the years 2010-2019 for each UC campus. More Information can be found on the University of California Information Center website: https://www.universityofcalifornia.edu/infocenter")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "AcademicYear", y="FilteredCountFR", fill=input$x))+
geom_col()+
scale_fill_futurama(palette = "planetexpress") +
theme_minimal(base_size = 18)+
scale_x_discrete(breaks=c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"))+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admissions From 2010-2019",x="Academic Year",y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_admit_numeric <- UC_admit
UC_admit_numeric$AcademicYear <- as.numeric(UC_admit_numeric$AcademicYear)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Grouping Type", choices = c("Campus", "Ethnicity", "Category"),
selected = "Campus"),
hr(),
helpText("Admissions data collected for the years 2010-2019 for each UC campus. More Information can be found on the University of California Information Center website: https://www.universityofcalifornia.edu/infocenter")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit_numeric %>%
ggplot(aes_string(x = "AcademicYear", y="FilteredCountFR", fill=input$x))+
geom_col()+
scale_fill_futurama(palette = "planetexpress") +
theme_minimal(base_size = 18)+
scale_x_discrete(breaks=c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"))+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admissions From 2010-2019",x="Academic Year",y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_admit_numeric <- UC_admit
UC_admit_numeric$AcademicYear <- as.numeric(UC_admit_numeric$AcademicYear)
UC_admit_numeric <- UC_admit
UC_admit_numeric$AcademicYear <- as.numeric(UC_admit_numeric$AcademicYear)
UC_admit_numeric
UC_admit_numeric <- UC_admit
UC_admit_numeric$AcademicYear <- as.integer(UC_admit_numeric$AcademicYear)
UC_admit_numeric
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Grouping Type", choices = c("Campus", "Ethnicity", "Category"),
selected = "Campus"),
hr(),
helpText("Admissions data collected for the years 2010-2019 for each UC campus. More Information can be found on the University of California Information Center website: https://www.universityofcalifornia.edu/infocenter")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit_numeric %>%
ggplot(aes_string(x = "AcademicYear", y="FilteredCountFR", fill=input$x))+
geom_col()+
scale_fill_futurama(palette = "planetexpress") +
theme_minimal(base_size = 18)+
scale_x_discrete(breaks=c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"))+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admissions From 2010-2019",x="Academic Year",y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Grouping Type", choices = c("Campus", "Ethnicity", "Category"),
selected = "Campus"),
hr(),
helpText("Admissions data collected for the years 2010-2019 for each UC campus. More Information can be found on the University of California Information Center website: https://www.universityofcalifornia.edu/infocenter")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "AcademicYear", y="FilteredCountFR", fill=input$x))+
geom_col()+
scale_fill_futurama(palette = "planetexpress") +
theme_minimal(base_size = 25)+
scale_x_discrete(breaks=c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"))+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admissions From 2010-2019",x="Academic Year",y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Grouping Type", choices = c("Campus", "Ethnicity", "Category"),
selected = "Campus"),
hr(),
helpText("Admissions data collected for the years 2010-2019 for each UC campus. More Information can be found on the University of California Information Center website: https://www.universityofcalifornia.edu/infocenter")
),
box(
plotOutput("plot", width = "1800px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "AcademicYear", y="FilteredCountFR", fill=input$x))+
geom_col()+
scale_fill_futurama(palette = "planetexpress") +
theme_minimal(base_size = 18)+
scale_x_discrete(breaks=c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"))+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admissions From 2010-2019",x="Academic Year",y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Grouping Type", choices = c("Campus", "Ethnicity", "Category"),
selected = "Campus"),
hr(),
helpText("Admissions data collected for the years 2010-2019 for each UC campus. More Information can be found on the University of California Information Center website: https://www.universityofcalifornia.edu/infocenter")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "AcademicYear", y="FilteredCountFR", fill=input$x))+
geom_col()+
scale_fill_futurama(palette = "planetexpress") +
theme_minimal(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admissions From 2010-2019",x="Academic Year",y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Grouping Type", choices = c("Campus", "Ethnicity", "Category"),
selected = "Campus"),
hr(),
helpText("Admissions data collected for the years 2010-2019 for each UC campus. More Information can be found on the University of California Information Center website: https://www.universityofcalifornia.edu/infocenter")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "AcademicYear", y="FilteredCountFR", fill=input$x))+
geom_col()+
scale_fill_futurama(palette = "planetexpress") +
theme_minimal(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admissions From 2010-2019",x="Academic Year",y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_admit <- rename(UC_admit, AcademicYear = "Academic_Yr") %>%
mutate_all(funs(str_replace(., "_", " ")))
knitr::opts_chunk$set(echo = TRUE)
if (!require("tidyverse")) install.packages('tidyverse')
library(tidyverse)
library(shiny)
library(shinydashboard)
library(paletteer)
library(RColorBrewer)
options(scipen=999) #disables scientific notation when printing
library("ggsci")
library("ggplot2")
library("gridExtra")
data("diamonds")
p1 = ggplot(subset(diamonds, carat >= 2.2),
aes(x = table, y = price, colour = cut)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "loess", alpha = 0.05, size = 1, span = 1) +
theme_bw()
p2 = ggplot(subset(diamonds, carat > 2.2 & depth > 55 & depth < 70),
aes(x = depth, fill = cut)) +
geom_histogram(colour = "black", binwidth = 1, position = "dodge") +
theme_bw()
UC_admit <- readr::read_csv("data/UC_admit.csv")
dim(UC_admit)
names(UC_admit)
glimpse(UC_admit)
summary(UC_admit)
anyNA(UC_admit)
UC_admit1 <- rename(UC_admit, AcademicYear = "Academic_Yr") %>%
mutate_all(funs(str_replace(., "_", " ")))
UC_admit1
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Grouping Type", choices = c("Campus", "AcademicYear", "Category"),
selected = "Campus"),
hr(),
helpText("Admissions data collected for the years 2010-2019 for each UC campus. More Information can be found on the University of California Information Center website: https://www.universityofcalifornia.edu/infocenter")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = input$x, y="FilteredCountFR", fill="Ethnicity"))+
geom_col()+
scale_fill_futurama(palette = "planetexpress") +
theme_minimal(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admissions By Ethnicity",x=NULL,y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Grouping Type", choices = c("Campus", "AcademicYear", "Category"),
selected = "Campus"),
hr(),
helpText("Admissions data collected for the years 2010-2019 for each UC campus. More Information can be found on the University of California Information Center website: https://www.universityofcalifornia.edu/infocenter")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit1 %>%
ggplot(aes_string(x = input$x, y="FilteredCountFR", fill="Ethnicity"))+
geom_col()+
scale_fill_futurama(palette = "planetexpress") +
theme_minimal(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admissions By Ethnicity",x=NULL,y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_admit1 <- rename(UC_admit, AcademicYear = "Academic_Yr") %>%
mutate_all(funs(str_replace(., "_", " ")))
UC_admit1
UC_admit1 <- rename(UC_admit, AcademicYear = "Academic_Yr") %>%
mutate_all(funs(str_replace(., "_", " ")))
UC_admit1
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Grouping Type", choices = c("Campus", "AcademicYear", "Category"),
selected = "Campus"),
hr(),
helpText("Admissions data collected for the years 2010-2019 for each UC campus. More Information can be found on the University of California Information Center website: https://www.universityofcalifornia.edu/infocenter")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit1 %>%
ggplot(aes_string(x = input$x, y="FilteredCountFR", fill="Ethnicity"))+
geom_col()+
scale_fill_futurama(palette = "planetexpress") +
theme_minimal(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admissions By Ethnicity",x=NULL,y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Grouping Type", choices = c("Campus", "AcademicYear", "Category"),
selected = "Campus"),
hr(),
helpText("Admissions data collected for the years 2010-2019 for each UC campus. More Information can be found on the University of California Information Center website: https://www.universityofcalifornia.edu/infocenter")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit1 %>%
ggplot(aes_string(x = input$x, y="FilteredCountFR", fill="Ethnicity"))+
geom_col()+
scale_fill_futurama(palette = "planetexpress") +
theme_minimal(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admissions By Ethnicity",x=NULL,y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_admit1 <- rename(UC_admit, AcademicYear = "Academic_Yr") %>%
UC_admit1
UC_admit1 <- rename(UC_admit, AcademicYear = "Academic_Yr") %>%
UC_admit1
UC_admit <- rename(UC_admit, AcademicYear = "Academic_Yr")
UC_admit
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Grouping Type", choices = c("Campus", "AcademicYear", "Category"),
selected = "Campus"),
hr(),
helpText("Admissions data collected for the years 2010-2019 for each UC campus. More Information can be found on the University of California Information Center website: https://www.universityofcalifornia.edu/infocenter")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = input$x, y="FilteredCountFR", fill="Ethnicity"))+
geom_col()+
scale_fill_futurama(palette = "planetexpress") +
theme_minimal(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admissions By Ethnicity",x=NULL,y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Grouping Type", choices = c("Campus", "Ethnicity", "Category"),
selected = "Campus"),
hr(),
helpText("Admissions data collected for the years 2010-2019 for each UC campus. More Information can be found on the University of California Information Center website: https://www.universityofcalifornia.edu/infocenter")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "AcademicYear", y="FilteredCountFR", fill=input$x))+
geom_col()+
scale_fill_futurama(palette = "planetexpress") +
theme_minimal(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admissions From 2010-2019",x="Academic Year",y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Grouping Type", choices = c("Campus", "AcademicYear", "Category"),
selected = "Campus"),
hr(),
helpText("Admissions data collected for the years 2010-2019 for each UC campus. More Information can be found on the University of California Information Center website: https://www.universityofcalifornia.edu/infocenter")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = input$x, y="FilteredCountFR", fill="Ethnicity"))+
geom_col()+
scale_fill_futurama(palette = "planetexpress") +
theme_minimal(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admissions By Ethnicity",x=NULL,y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny); runApp('Lab 13 HW Q2 App.R')
runApp('Lab 13 HW Q2 App.R')
runApp('Lab 13 HW Q2 App.R')
runApp('Lab 13 HW Q3 App.R')
