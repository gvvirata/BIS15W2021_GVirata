library(qtl)
library(qtlcharts)
knitr::opts_chunk$set(fig.width=8, fig.height=6, message=FALSE)
?read.cross
sug <- read.cross("csv", "https://rqtl.org", "sug.csv",
genotypes=c("CC", "CB", "BB"), alleles=c("C", "B"))
summary(sug)
head(sug$pheno)
nind(sug)    # No. individuals
nphe(sug)    # No. phenotypes
nchr(sug)    # No. chromosomes
totmar(sug)  # Total markers
nmar(sug)    # No. markers on each chromosome
plot(sug)
#?plotMissing
plotMissing(sug, main="")
plotMissing(sug, main="", reorder=1)
#?plotMap
plotMap(sug)
plotMap(sug,show.marker.names=TRUE)
#?plotPheno
plotPheno(sug, pheno.col=1)
plotPheno(sug, pheno.col=2)
plotPheno(sug, pheno.col=3)
plotPheno(sug, pheno.col=4)
iplotMap(sug) #D7MIT31
iplotCorr(sug$pheno)
iplotCorr(sug$pheno, chartOpts=list(height=300, width=600, scatcolors="pink"))
corrplot <- iplotCorr(sug$pheno, chartOpts=list(height=300, width=600, scatcolors="pink"))
htmlwidgets::saveWidget(corrplot, file="iplotCorr_example.html")
sug <- calc.genoprob(sug, step=1)
out.em <- scanone(sug)
out.em2 <- scanone(sug, pheno.col=1:4)
summary(out.em)
summary(out.em2)
summary(out.em, threshold=3)
plot(out.em)
plot(out.em, chr=c(7,15), ylab="LOD Score")
iplotScanone(out.em)
iplotScanone(out.em, chr=c(7,15))
iplotScanone(out.em, sug)
iplotScanone(out.em, sug, chr=c(7,15))
data(grav)
summary(grav)
plotMap(grav)
iplotMap(grav)
head(grav$pheno)
iplotCorr(grav$pheno)
iplotCurves(grav$pheno)
times1 <- as.numeric(sub("T", "", phenames(grav)))/60
times1
times <- attr(grav, "time")
times
#?attr
phe <- grav$pheno
head(phe)
iplotCurves(phe, times)
iplotCurves(phe, times, chartOpts=list(curves_xlab="Time (hrs)",
curves_ylab="Response"))
iplotCurves(phe, times, phe[,c("T30", "T240")], phe[,c("T240", "T480")],
chartOpts=list(curves_xlab="Time", curves_ylab="Root tip angle",
scat1_xlab="Angle at 30 min", scat1_ylab="Angle at 4 hrs",
scat2_xlab="Angle at 4 hrs", scat2_ylab="Angle at 8 hrs"))
grav <- calc.genoprob(grav, step=1)
out.em <- scanone(grav, pheno.col=1:nphe(grav))
summary(out.em)
times_m <- c("T30", "T240", "T480")
times_clear <- c("30 mins", "4 hours", "8 hours")
times_number <- match(times_m, phenames(grav))
for(i in 1:length(times_m))
print(iplotScanone(out.em, lodcolumn=times_number[i], chartOpts=list(title=times_clear[i])))
knitr::opts_chunk$set(echo = TRUE)
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
?diff
knitr::opts_chunk$set(echo = TRUE)
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
knitr::opts_chunk$set(echo = TRUE)
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
getwd()
data_files <- list.files("data/locations", pattern = "locations-2*", full.names = TRUE)
data_files
collar_files <- list.files("data/us_individual_collar_data", pattern = "collar-data-*", full.names = TRUE)
collar_files
# create an empty vector to store those counts
results <- vector(mode = "integer", length = length(data_files))
for (i in 1:length(data_files)){
data0 <- read_csv(data_files[i])
count <- nrow(data0)
results[i] <- count
}
results
data_files3 <- list.files("data/individual_collar_data", full.names = TRUE)
data_files3
# only ggplot
for (i in 1:length(data_files3)){
data0 <- as.data.frame(read_csv(data_files3[i]))
print(
ggplot(data0, aes(x=long,y=lat))+
geom_path()+
geom_point()+
labs(title = data_files3[i], x = "longitude", y = "latitude")
)
}
# how to show them on a map?
data_files3 <- list.files("data/individual_collar_data", full.names = TRUE)
data_files3
# only ggplot
for (i in 1:length(data_files3)){
data0 <- as.data.frame(read_csv(data_files3[i]))
print(
ggplot(data0, aes(x=long,y=lat))+
geom_path()+
geom_point()+
labs(title = data_files3[i], x = "longitude", y = "latitude")
)
}
# how to show them on a map?
# summary table
data_list <- lapply(data_files3, read_csv)
collar_data_all <- bind_rows(data_list)
collar_data_all %>%
summarise(max_lat=max(lat),
min_lat=min(lat),
max_long=max(long),
min_long=min(long))
lat <- c(14.91539, 31.56526)
long <- c(122.0874, 134.9906)
bbox <- make_bbox(long, lat, f = 0.5)
map <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map)
for (i in 1:length(data_files3)){
data0 <- as.data.frame(read_csv(data_files3[i]))
print(
ggmap(map)+
geom_path(data = data0, aes(long,lat))+
geom_point(data = data0, aes(long,lat))+
labs(title = data_files3[i], x = "longitude", y = "latitude")
)
}
knitr::opts_chunk$set(echo = TRUE)
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
collar_files <- list.files("data/us_individual_collar_data", pattern = "collar-data-*", full.names = TRUE)
collar_files
for (i in 1:length(collar_files)){
data0 <- as.data.frame(read_csv(collar_files[i]))
print(
ggplot(data0, aes(x=long,y=lat))+
geom_path()+
geom_point()+
labs(title = collar_files[i], x = "longitude", y = "latitude")
)
}
data_list <- lapply(collar_files, read_csv)
collar_data_all <- bind_rows(data_list)
collar_data_all %>%
summarise(max_lat=max(lat),
min_lat=min(lat),
max_long=max(long),
min_long=min(long))
lat <- c(14.91539, 31.56526)
long <- c(122.0874, 134.9906)
bbox <- make_bbox(long, lat, f = 0.5)
map <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map)
for (i in 1:length(collar_files)){
data0 <- as.data.frame(read_csv(collar_files[i]))
print(
ggmap(map)+
geom_path(data = data0, aes(long,lat))+
geom_point(data = data0, aes(long,lat))+
labs(title = collar_files[i], x = "longitude", y = "latitude")
)
}
for (i in 1:length(collar_files)){
data0 <- as.data.frame(read_csv(collar_files[i]))
print(
ggplot(data0, aes(x=long,y=lat))+
geom_path()+
geom_point()+
labs(title = collar_files[i], x = "longitude", y = "latitude")
)
}
data_list <- lapply(collar_files, read_csv)
collar_data_all <- bind_rows(data_list)
collar_data_all %>%
summarise(max_lat=max(lat),
min_lat=min(lat),
max_long=max(long),
min_long=min(long))
lat <- c(14.91539, 31.56526)
long <- c(122.0874, 134.9906)
bbox <- make_bbox(long, lat, f = 0.5)
map <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map)
for (i in 1:length(collar_files)){
data0 <- as.data.frame(read_csv(collar_files[i]))
print(
ggmap(map)+
geom_path(data = data0, aes(long,lat))+
geom_point(data = data0, aes(long,lat))+
labs(title = collar_files[i], x = "longitude", y = "latitude")
)
}
for (i in 1:length(collar_files)){
data0 <- as.data.frame(read_csv(collar_files[i]))
print(
ggplot(data0, aes(x=long,y=lat))+
geom_path()+
geom_point()+
labs(title = collar_files[i], x = "longitude", y = "latitude")
)
}
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
files <- list.files(path = "data/spiders", pattern = ".csv")
files
files <- list.files(path = "data/spiders", pattern = ".csv", full.names = TRUE)
files
spider_list <- lapply(files, read_csv)
spider_list[[3]]
class(spider_list[[3]])
names <- list.files(path = "data/spiders", pattern = ".csv")
names_list <- strsplit(names, split = " .csv")
names_list
names_vec <- unlist(names_list)
names_vec
names(spider_list) <- names_vec
names(spider_list)
spider_list$Butte
spiders_all <- bind_rows(spider_list)
spiders_all
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
table_B <- read_csv(here("lab12", "data", "table_B.csv"))
join_type(firstTable, secondTable, by=columnTojoinOn)
inner_exampleDF <- inner_join(table_A, table_B, by="customer_ID")
inner_exampleDF
join_type(firstTable, secondTable, by=columnTojoinOn)
left_exampleDF <- left_join(table_A, table_B, by="customer_ID")
left_exampleDF
full_exampleDF <- full_join(table_A, table_B, by="customer_ID")
full_exampleDF
semi_exampleDF <- semi_join(table_A, table_B, by="customer_ID")
semi_exampleDF
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
library(lubridate)
spider_list <- lapply(files, read_csv)
spider_list[[3]]
class(spider_list[[3]])
collar_merge <- lapply(collar_files, read_csv)
collar_merge <- lapply(collar_files, read_csv)
collar_merge
collar_merge0 <- lapply(collar_files, read_csv)
collar_merge1 <- bind_rows(collar_merge0)
collar_merge0 <- lapply(collar_files, read_csv)
collar_merge1 <- bind_rows(collar_merge0)
collar_merge1
collar_merge0 <- lapply(collar_files, read_csv) %>%
bind_rows(collar_merge0)
collar_merge0
collar_merge0 %>%
summarise(max_lat = max(lat, na.rm=T),
max_long = max(long, na.rm=T),
min_lat = min(lat, na.rm=T),
min_long = min(long, na.rm=T),
n=n())
collar_merge0 %>%
summarise(min_lat = min(lat, na.rm=T),
max_lat = max(lat, na.rm=T),
min_long = min(long, na.rm=T),
max_long = max(long, na.rm=T),
n=n())
lat <- c(26.6116, 41.58802)
long <- c(-122.6017, -106.3343)
bbox <- make_bbox(long, lat, f = 0.05)
lat <- c(26.6116, 41.58802)
long <- c(-122.6017, -106.3343)
bbox <- make_bbox(long, lat, f = 0.05)
collar_map <- get_map(bbox, maptype = "terrain", source = "stamen")
collar_map
lat <- c(26.6116, 41.58802)
long <- c(-122.6017, -106.3343)
bbox <- make_bbox(long, lat, f = 0.05)
collar_map <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(collar_map)
lat <- c(26.6116, 41.58802)
long <- c(-122.6017, -106.3343)
bbox <- make_bbox(long, lat, f = 0.05)
collar_map <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(collar_map)
for (i in 1:length(collar_files)){
data1 <- as.data.frame(read_csv(collar_files[i]))
print(
ggmap(collar_map)+
geom_path(data = data1, aes(long,lat))+
geom_point(data = data1, aes(long,lat))+
labs(title = collar_files[i], x = "longitude", y = "latitude")
)
}
for (i in 1:length(collar_files)){
data1 <- as.data.frame(read_csv(collar_files[i]))
print(
ggmap(collar_map)+
geom_path(data = data1, aes(long,lat))+
geom_point(data = data1, aes(long,lat))+
labs(title = collar_files[i], x = "longitude", y = "latitude")
)
}
#?hyper
data(hyper)
library(qtl)
library(qtlcharts)
knitr::opts_chunk$set(fig.width=8, fig.height=6, message=FALSE)
?read.cross
sug <- read.cross("csv", "https://rqtl.org", "sug.csv",
genotypes=c("CC", "CB", "BB"), alleles=c("C", "B"))
summary(sug)
head(sug$pheno)
nind(sug)    # No. individuals
nphe(sug)    # No. phenotypes
nchr(sug)    # No. chromosomes
totmar(sug)  # Total markers
nmar(sug)    # No. markers on each chromosome
plot(sug)
nind(sug)    # No. individuals
nphe(sug)    # No. phenotypes
nchr(sug)    # No. chromosomes
totmar(sug)  # Total markers
nmar(sug)    # No. markers on each chromosome
nind(hyper)    # No. individuals
nphe(hyper)    # No. phenotypes
nchr(hyper)    # No. chromosomes
totmar(hyper)  # Total markers
nmar(hyper)    # No. markers on each chromosome
summary(out.em)
library(qtl)
library(qtlcharts)
knitr::opts_chunk$set(fig.width=8, fig.height=6, message=FALSE)
?read.cross
sug <- read.cross("csv", "https://rqtl.org", "sug.csv",
genotypes=c("CC", "CB", "BB"), alleles=c("C", "B"))
summary(sug)
head(sug$pheno)
nind(sug)    # No. individuals
nphe(sug)    # No. phenotypes
nchr(sug)    # No. chromosomes
totmar(sug)  # Total markers
nmar(sug)    # No. markers on each chromosome
plot(sug)
#?plotMissing
plotMissing(sug, main="")
plotMissing(sug, main="", reorder=1)
#?plotMap
plotMap(sug)
plotMap(sug,show.marker.names=TRUE)
#?plotPheno
plotPheno(sug, pheno.col=1)
plotPheno(sug, pheno.col=2)
plotPheno(sug, pheno.col=3)
plotPheno(sug, pheno.col=4)
iplotMap(sug) #D7MIT31
iplotCorr(sug$pheno)
iplotCorr(sug$pheno, chartOpts=list(height=300, width=600, scatcolors="pink"))
corrplot <- iplotCorr(sug$pheno, chartOpts=list(height=300, width=600, scatcolors="pink"))
htmlwidgets::saveWidget(corrplot, file="iplotCorr_example.html")
sug <- calc.genoprob(sug, step=1)
out.em <- scanone(sug)
out.em2 <- scanone(sug, pheno.col=1:4)
summary(out.em)
summary(out.em2)
summary(hyper)
summary(hyper)
plot.map(hyper)
plotPheno(hyper,col=1)
plotPheno(hyper,col=2)
plotPheno(hyper,col=3)
plotPheno(hyper,col=4)
plotPheno(hyper,col=5)
plotPheno(hyper,col=9)
nmar(hyper)
nchr(sug)
nmar(hyper)
nmar(hyper)
iplotMap(hyper)
plotMissing(hyper, main="")
plotMissing(hyper, main="", reorder=1)
plotMissing(hyper, main="", reorder=1)
plotMissing(hyper, main="", reorder=3)
plotMissing(hyper, main="", reorder=1)
drop.nullmarkers(hyper)
hyper_new <- drop.nullmarkers(hyper)
summary(hyper_new)
summary(hyper)
summary(hyper)
hyper_scores <- calc.genoprob(hyper_new, step=1)
hyper_calcLOD <- calc.genoprob(hyper_new, step=1)
hyper_scores <- scanone(hyper_calcLOD)
hyper_calcLOD <- calc.genoprob(hyper_new, step=1)
hyper_scores <- scanone(hyper_calcLOD)
hyper_scores
summary(hyper_scores,pheno.col=1)
iplotScanone(out.em)
iplotScanone(hyper_scores)
summary(hyper_scores, threshold = 1)
iplotScanone(hyper_scores, chr=c(1,2,4,5,6,15))
plot(hyper_new, chr=4)
plot(hyper_new, chr=4, pheno.col=1)
chrom_4 <- scanone(hyper_new, pheno.col=1:4)
chrom_4 <- scanone(hyper_new, pheno.col=1:2)
chrom_4 <- scanone(hyper_new, chr=4)
knitr::opts_chunk$set(echo = TRUE)
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
library(lubridate)
collar_files <- list.files("data/us_individual_collar_data", pattern = "collar-data-*", full.names = TRUE)
collar_files
for (i in 1:length(collar_files)){
data0 <- as.data.frame(read_csv(collar_files[i]))
print(
ggplot(data0, aes(x=long,y=lat))+
geom_path()+
geom_point()+
labs(title = collar_files[i], x = "longitude", y = "latitude")
)
}
collar_merge0 <- lapply(collar_files, read_csv) %>%
bind_rows(collar_merge0)
collar_merge0
collar_merge0 %>%
summarise(min_lat = min(lat, na.rm=T),
max_lat = max(lat, na.rm=T),
min_long = min(long, na.rm=T),
max_long = max(long, na.rm=T),
n=n())
lat <- c(26.6116, 41.58802)
long <- c(-122.6017, -106.3343)
bbox <- make_bbox(long, lat, f = 0.05)
collar_map <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(collar_map)
for (i in 1:length(collar_files)){
data1 <- as.data.frame(read_csv(collar_files[i]))
print(
ggmap(collar_map)+
geom_path(data = data1, aes(long,lat))+
geom_point(data = data1, aes(long,lat))+
labs(title = collar_files[i], x = "longitude", y = "latitude")
)
}
#?hyper
data(hyper)
summary(hyper)
plot.map(hyper)
nmar(hyper)
iplotMap(hyper)
plotMissing(hyper, main="", reorder=1)
drop.nullmarkers(hyper)
summary(hyper)
hyper_new <- drop.nullmarkers(hyper)
summary(hyper_new)
hyper_calcLOD <- calc.genoprob(hyper_new, step=1)
hyper_scores <- scanone(hyper_calcLOD)
hyper_scores
summary(hyper_scores,pheno.col=1)
iplotScanone(hyper_scores)
summary(hyper_scores, threshold = 1)
iplotScanone(hyper_scores, chr=c(1,2,4,5,6,15))
chrom_4 <- scanone(hyper_new, chr=4)
summary(hyper_scores, chr=4)
out.em2 <- scanone(hyper_new, pheno.col=1:4)
out.em2 <- scanone(hyper_new, pheno.col=1:2)
plotPheno(hyper_new, pheno.col=1)
plotPheno(hyper_new, pheno.col=2)
plotPheno(hyper_new, pheno.col=1)
plotPheno(hyper_new, pheno.col=2)
chrom4 <- scanone(hyper_scores, pheno.col=1)
plotPheno(hyper_new, pheno.col=1)
plotPheno(hyper_new, pheno.col=2)
chrom4 <- scanone(hyper_new, pheno.col=1)
chrom4 <- scanone(hyper_new, pheno.col=1)
summary(out.em, threshold=3)
hyper_iplotscanone<-iplotScanone(hyper_scores,chr = c(1,2,4,5,6,15), hyper_calcLOD)
htmlwidgets::saveWidget(hyper_iplotscanone,file="hyper_iplotScanone.html")
collar_merge0 <- lapply(collar_files, read_csv) %>%
bind_rows()
collar_merge0
